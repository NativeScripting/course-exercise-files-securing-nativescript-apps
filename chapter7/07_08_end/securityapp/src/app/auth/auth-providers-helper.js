"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nativescript_oauth2_1 = require("nativescript-oauth2");
var providers_1 = require("nativescript-oauth2/providers/providers");
var my_oauth_provider_1 = require("./my-oauth-provider");
function configureOAuthProviders() {
    var facebookProvider = configureOAuthProviderFacebook();
    var microsoftProvider = configureOAuthProviderMicrosoft();
    var facebookProxyProvider = configureOAuthProviderFacebookProxy();
    nativescript_oauth2_1.configureTnsOAuth([facebookProvider, microsoftProvider, facebookProxyProvider]);
}
exports.configureOAuthProviders = configureOAuthProviders;
function configureOAuthProviderFacebook() {
    var options = {
        openIdSupport: 'oid-none',
        clientId: '357684115041386',
        clientSecret: 'c62c3787c285f9a49b4632213cb62f0f',
        redirectUri: 'https://www.facebook.com/connect/login_success.html',
        scopes: ['email'] //list of scopes
    };
    var facebookProvider = new providers_1.TnsOaProviderFacebook(options);
    return facebookProvider;
}
function configureOAuthProviderMicrosoft() {
    var options = {
        openIdSupport: 'oid-full',
        clientId: 'bb6eaff7-921e-4269-8dc5-458bd1d7d3a0',
        redirectUri: 'msalbb6eaff7-921e-4269-8dc5-458bd1d7d3a0://auth',
        urlScheme: 'msalbb6eaff7-921e-4269-8dc5-458bd1d7d3a0',
        scopes: ['openid', 'User.Read'] // list of scopes
    };
    var microsoftProvider = new providers_1.TnsOaProviderMicrosoft(options);
    return microsoftProvider;
}
function configureOAuthProviderFacebookProxy() {
    var options = {
        openIdSupport: 'oid-none',
        clientId: '357684115041386',
        clientSecret: '',
        redirectUri: 'https://www.facebook.com/connect/login_success.html',
        scopes: ['email'] //list of scopes
    };
    var myProvider = new my_oauth_provider_1.TnsOaProviderMyCustomProvider(options);
    return myProvider;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1wcm92aWRlcnMtaGVscGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXV0aC1wcm92aWRlcnMtaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkRBQXdEO0FBQ3hELHFFQUFvTDtBQUNwTCx5REFBa0c7QUFFbEcsU0FBZ0IsdUJBQXVCO0lBQ25DLElBQU0sZ0JBQWdCLEdBQUcsOEJBQThCLEVBQUUsQ0FBQztJQUMxRCxJQUFNLGlCQUFpQixHQUFHLCtCQUErQixFQUFFLENBQUM7SUFDNUQsSUFBTSxxQkFBcUIsR0FBRyxtQ0FBbUMsRUFBRSxDQUFDO0lBQ3BFLHVDQUFpQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUscUJBQXFCLENBQUMsQ0FBQyxDQUFDO0FBQ3BGLENBQUM7QUFMRCwwREFLQztBQUVELFNBQVMsOEJBQThCO0lBQ25DLElBQU0sT0FBTyxHQUFpQztRQUMxQyxhQUFhLEVBQUUsVUFBVTtRQUN6QixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLFlBQVksRUFBRSxrQ0FBa0M7UUFDaEQsV0FBVyxFQUFFLHFEQUFxRDtRQUNsRSxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxnQkFBZ0I7S0FDckMsQ0FBQztJQUVGLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxpQ0FBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1RCxPQUFPLGdCQUFnQixDQUFDO0FBQzVCLENBQUM7QUFFRCxTQUFTLCtCQUErQjtJQUNwQyxJQUFNLE9BQU8sR0FBa0M7UUFDM0MsYUFBYSxFQUFFLFVBQVU7UUFDekIsUUFBUSxFQUFFLHNDQUFzQztRQUNoRCxXQUFXLEVBQUUsaURBQWlEO1FBQzlELFNBQVMsRUFBRSwwQ0FBMEM7UUFDckQsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDLGlCQUFpQjtLQUNwRCxDQUFDO0lBRUYsSUFBTSxpQkFBaUIsR0FBRyxJQUFJLGtDQUFzQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlELE9BQU8saUJBQWlCLENBQUM7QUFDN0IsQ0FBQztBQUVELFNBQVMsbUNBQW1DO0lBQ3hDLElBQU0sT0FBTyxHQUFpQztRQUMxQyxhQUFhLEVBQUUsVUFBVTtRQUN6QixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLFlBQVksRUFBRSxFQUFFO1FBQ2hCLFdBQVcsRUFBRSxxREFBcUQ7UUFDbEUsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsZ0JBQWdCO0tBQ3JDLENBQUM7SUFFRixJQUFNLFVBQVUsR0FBRyxJQUFJLGlEQUE2QixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlELE9BQU8sVUFBVSxDQUFDO0FBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWd1cmVUbnNPQXV0aCB9IGZyb20gXCJuYXRpdmVzY3JpcHQtb2F1dGgyXCI7XG5pbXBvcnQgeyBUbnNPYVByb3ZpZGVyLCBUbnNPYVByb3ZpZGVyT3B0aW9uc0ZhY2Vib29rLCBUbnNPYVByb3ZpZGVyRmFjZWJvb2ssIFRuc09hUHJvdmlkZXJPcHRpb25zTWljcm9zb2Z0LCBUbnNPYVByb3ZpZGVyTWljcm9zb2Z0IH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1vYXV0aDIvcHJvdmlkZXJzL3Byb3ZpZGVyc1wiO1xuaW1wb3J0IHsgVG5zT2FNeUN1c3RvbVByb3ZpZGVyT3B0aW9ucywgVG5zT2FQcm92aWRlck15Q3VzdG9tUHJvdmlkZXIgfSBmcm9tIFwiLi9teS1vYXV0aC1wcm92aWRlclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndXJlT0F1dGhQcm92aWRlcnMoKSB7XG4gICAgY29uc3QgZmFjZWJvb2tQcm92aWRlciA9IGNvbmZpZ3VyZU9BdXRoUHJvdmlkZXJGYWNlYm9vaygpO1xuICAgIGNvbnN0IG1pY3Jvc29mdFByb3ZpZGVyID0gY29uZmlndXJlT0F1dGhQcm92aWRlck1pY3Jvc29mdCgpO1xuICAgIGNvbnN0IGZhY2Vib29rUHJveHlQcm92aWRlciA9IGNvbmZpZ3VyZU9BdXRoUHJvdmlkZXJGYWNlYm9va1Byb3h5KCk7XG4gICAgY29uZmlndXJlVG5zT0F1dGgoW2ZhY2Vib29rUHJvdmlkZXIsIG1pY3Jvc29mdFByb3ZpZGVyLCBmYWNlYm9va1Byb3h5UHJvdmlkZXJdKTtcbn1cblxuZnVuY3Rpb24gY29uZmlndXJlT0F1dGhQcm92aWRlckZhY2Vib29rKCk6IFRuc09hUHJvdmlkZXIge1xuICAgIGNvbnN0IG9wdGlvbnM6IFRuc09hUHJvdmlkZXJPcHRpb25zRmFjZWJvb2sgPSB7XG4gICAgICAgIG9wZW5JZFN1cHBvcnQ6ICdvaWQtbm9uZScsXG4gICAgICAgIGNsaWVudElkOiAnMzU3Njg0MTE1MDQxMzg2JyxcbiAgICAgICAgY2xpZW50U2VjcmV0OiAnYzYyYzM3ODdjMjg1ZjlhNDliNDYzMjIxM2NiNjJmMGYnLFxuICAgICAgICByZWRpcmVjdFVyaTogJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9jb25uZWN0L2xvZ2luX3N1Y2Nlc3MuaHRtbCcsXG4gICAgICAgIHNjb3BlczogWydlbWFpbCddIC8vbGlzdCBvZiBzY29wZXNcbiAgICB9O1xuXG4gICAgY29uc3QgZmFjZWJvb2tQcm92aWRlciA9IG5ldyBUbnNPYVByb3ZpZGVyRmFjZWJvb2sob3B0aW9ucyk7XG4gICAgcmV0dXJuIGZhY2Vib29rUHJvdmlkZXI7XG59XG5cbmZ1bmN0aW9uIGNvbmZpZ3VyZU9BdXRoUHJvdmlkZXJNaWNyb3NvZnQoKTogVG5zT2FQcm92aWRlciB7XG4gICAgY29uc3Qgb3B0aW9uczogVG5zT2FQcm92aWRlck9wdGlvbnNNaWNyb3NvZnQgPSB7XG4gICAgICAgIG9wZW5JZFN1cHBvcnQ6ICdvaWQtZnVsbCcsXG4gICAgICAgIGNsaWVudElkOiAnYmI2ZWFmZjctOTIxZS00MjY5LThkYzUtNDU4YmQxZDdkM2EwJyxcbiAgICAgICAgcmVkaXJlY3RVcmk6ICdtc2FsYmI2ZWFmZjctOTIxZS00MjY5LThkYzUtNDU4YmQxZDdkM2EwOi8vYXV0aCcsXG4gICAgICAgIHVybFNjaGVtZTogJ21zYWxiYjZlYWZmNy05MjFlLTQyNjktOGRjNS00NThiZDFkN2QzYTAnLFxuICAgICAgICBzY29wZXM6IFsnb3BlbmlkJywgJ1VzZXIuUmVhZCddIC8vIGxpc3Qgb2Ygc2NvcGVzXG4gICAgfTtcblxuICAgIGNvbnN0IG1pY3Jvc29mdFByb3ZpZGVyID0gbmV3IFRuc09hUHJvdmlkZXJNaWNyb3NvZnQob3B0aW9ucyk7XG4gICAgcmV0dXJuIG1pY3Jvc29mdFByb3ZpZGVyO1xufVxuXG5mdW5jdGlvbiBjb25maWd1cmVPQXV0aFByb3ZpZGVyRmFjZWJvb2tQcm94eSgpOiBUbnNPYVByb3ZpZGVyIHtcbiAgICBjb25zdCBvcHRpb25zOiBUbnNPYU15Q3VzdG9tUHJvdmlkZXJPcHRpb25zID0ge1xuICAgICAgICBvcGVuSWRTdXBwb3J0OiAnb2lkLW5vbmUnLFxuICAgICAgICBjbGllbnRJZDogJzM1NzY4NDExNTA0MTM4NicsXG4gICAgICAgIGNsaWVudFNlY3JldDogJycsXG4gICAgICAgIHJlZGlyZWN0VXJpOiAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2Nvbm5lY3QvbG9naW5fc3VjY2Vzcy5odG1sJyxcbiAgICAgICAgc2NvcGVzOiBbJ2VtYWlsJ10gLy9saXN0IG9mIHNjb3Blc1xuICAgIH07XG5cbiAgICBjb25zdCBteVByb3ZpZGVyID0gbmV3IFRuc09hUHJvdmlkZXJNeUN1c3RvbVByb3ZpZGVyKG9wdGlvbnMpO1xuICAgIHJldHVybiBteVByb3ZpZGVyO1xufVxuIl19